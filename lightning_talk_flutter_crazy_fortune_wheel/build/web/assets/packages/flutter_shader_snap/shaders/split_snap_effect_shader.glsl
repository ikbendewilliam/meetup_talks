{
  "sksl": {
    "entrypoint": "split_snap_effect_shader_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 resolution;\nuniform float iTime;\nuniform shader imageTexture;\nuniform half2 imageTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nfloat FLT_flutter_local_hash(float x, float y)\n{\n    return fract(sin(dot(vec2(x, y), vec2(12.4139003753662109375, 53.123699188232421875))) * 52381.1328125);\n}\n\nfloat FLT_flutter_local_hash3(float x, float y)\n{\n    return fract(sin(dot(vec2(x, y), vec2(54.341999053955078125, 53.12400054931640625))) * 21341.234375);\n}\n\nfloat FLT_flutter_local_hash2(float x, float y)\n{\n    return fract(sin(dot(vec2(x, y), vec2(14.52299976348876953125, 127.4850006103515625))) * 2578.31591796875);\n}\n\nvec4 FLT_flutter_local_particals_effect_color(vec2 uv, float deltaTime, float opacity_from_border)\n{\n    vec4 texColor = imageTexture.eval(imageTexture_size * ( uv));\n    float original_alpha = texColor.w;\n    float x = uv.x;\n    float y = uv.y;\n    float param = x;\n    float param_1 = y;\n    float border = ((x + x) - deltaTime) + (FLT_flutter_local_hash(param, param_1) * 0.100000001490116119384765625);\n    float param_2 = x;\n    float param_3 = y;\n    float opacity_particals_effect = ((smoothstep(0.4000000059604644775390625, 0.800000011920928955078125, border * 2.0) * original_alpha) * (1.0 - opacity_from_border)) * step(0.0, FLT_flutter_local_hash2(param_2, param_3));\n    return vec4(texColor.xyz * opacity_particals_effect, opacity_particals_effect);\n}\n\nvoid FLT_main()\n{\n    vec2 uv_1 = FLT_flutter_local_FlutterFragCoord() / resolution;\n    vec4 texColor_1 = imageTexture.eval(imageTexture_size * ( uv_1));\n    float original_alpha_1 = texColor_1.w;\n    float deltaTime_1 = (iTime * 3.0) - 0.550000011920928955078125;\n    float x_1 = uv_1.x;\n    float y_1 = uv_1.y;\n    float param_4 = x_1;\n    float param_5 = y_1;\n    float border_1 = ((x_1 + x_1) - deltaTime_1) + (FLT_flutter_local_hash(param_4, param_5) * 0.100000001490116119384765625);\n    float opacity_from_border_1 = step(0.5, border_1);\n    fragColor = vec4(texColor_1.xyz * opacity_from_border_1, opacity_from_border_1 * original_alpha_1);\n    float delta = smoothstep(0.5, 1.0, 1.0 - border_1) / 10.0;\n    float param_6 = x_1;\n    float param_7 = y_1;\n    vec2 uv_particle = vec2(x_1 + (delta * 0.300000011920928955078125), y_1 + ((delta * 4.0) * (FLT_flutter_local_hash3(param_6, param_7) - 0.5)));\n    vec2 param_8 = uv_particle;\n    float param_9 = deltaTime_1;\n    float param_10 = opacity_from_border_1;\n    fragColor += FLT_flutter_local_particals_effect_color(param_8, param_9, param_10);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "resolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "iTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 2,
        "name": "imageTexture",
        "rows": 1,
        "type": 12
      }
    ]
  }
}